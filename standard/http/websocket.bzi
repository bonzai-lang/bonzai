require "std:http"

extern fn toBase64(data: string): string
extern fn fromBase64(data: string): string

extern fn initWebsocket(host: string, port: int, useSSL: bool): Websocket 
extern fn sendTextFrame(ws: Websocket, data: string)
extern fn receiveFrame(ws: Websocket): string
extern fn closeWebsocket(ws: Websocket)
extern fn performHandshake(ws: Websocket, path: string, host: string, port: int)

interface Websocket {
  fn sendText(data: string)
  fn receive(self: Websocket, callback: fn(string): unit)
  fn receiveOnce(self: Websocket, callback: fn(string): unit)
  fn close()
}

fn Websocket(host: string, port: int, path: string, isSecure: bool) => {
  let ws = initWebsocket(host, port, isSecure)
  performHandshake(ws, path, host, port)

  actor < Websocket {
    on sendText(data) => sendTextFrame(ws, data)
    
    on receive(self, callback) => {
      let frame = receiveFrame(ws)
      callback(frame)

      self->receive(self, callback)
    }

    on close() => closeWebsocket(ws)

    on receiveOnce(self, callback) => {
      let frame = receiveFrame(ws)
      callback(frame)
    }
  }
}