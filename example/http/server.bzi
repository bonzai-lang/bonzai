require "std:http"
require "std:foundation"
require "std:datatypes/json"

let thread = spawn HTTP::create(
  fn(req) => {
    let headers = req->get()

    match Header::from(headers) {
      case Some(Header(top, _, content)) => {
        let json = JSON::parse(content)
        let [method, path .. _] = String::split(top, " ")

        print("[$method] Received request on $path")

        req->send(JSON::stringify(json))

        true
      }

      case None => {
        print("Invalid JSON")
        req->send(JSON::stringify(
          JSON->Object([
            ("error", JSON->String("Invalid JSON")),
            ("status", JSON->String("400 Bad Request"))
          ])
        ))

        false
      }
    }
  },
  8000
)

print("Server started on port 8000")

thread.wait()
