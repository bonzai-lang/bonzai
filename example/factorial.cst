(require "natives")

(interface Factorial []
  (defn factorial [(self Factorial) (n int)])  
)

(defn Factorial [] {
  (mut acc 1)

  (actor (implements Factorial)
    (on factorial [self n] 
      (if (== n 0) {
        (print (value acc))
      } {
        (set acc (* (value acc) n))
        (send self factorial self (- n 1))
      })
    )
  )
})

(let f (spawn (Factorial)))
(send f factorial f 5)