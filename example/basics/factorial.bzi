interface Factorial {
  fn factorial(self: Factorial, n: int)
}

require "std:io"
require "std:datatypes/mutable"
require "std:math"

fn Factorial() => {
  mut acc = 1

  actor < Factorial {
    on factorial(self, n) => {
      match n {
        case 0 => print(acc.value)
        case _ => {
          acc = acc.value * n
          self->factorial(self, n - 1)
        }
      }
    }
  }
}

let f = spawn Factorial()
f->factorial(f, 5)